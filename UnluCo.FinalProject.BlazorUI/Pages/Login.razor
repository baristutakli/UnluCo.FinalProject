@page "/login"
@inherits UserLoginModel
@inject NavigationManager NavManager
@inject IJSRuntime JsRuntime
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage Storage
@using  UnluCo.FinalProject.BlazorUI.Services
@using Newtonsoft.Json


@if (@Model is null)
{

    <p>loading...</p>

}
else
{

    <section class="vh-100 bg-light">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                    <div class="card shadow-2-strong" style="border-radius: 1rem;">
                        <div class="card-body p-5 text-center">

                            <h3 class="mb-5">Sign in</h3>

                            <EditForm Model="@Model" OnValidSubmit="@LoginAccount">
                                <DataAnnotationsValidator />

                                <div class="form-outline mb-4">
                                    <label class="form-label" for="Email">Email</label>
                                    <InputText type="email" id="Email" @bind-Value="Model.Email" class="form-control form-control-lg" />
                                    <ValidationMessage For="() => Model.Email" />
                                </div>
                                <div class="form-outline mb-4">
                                    <label class="form-label" for="Password">Password</label>
                                    <InputText id="Password" @bind-Value="Model.Password" type="password" class="form-control form-control-lg" />
                                    <ValidationMessage For="() => Model.Password" />
                                </div>
                                <button type="submit" class="btn btn-primary btn-lg btn-block">Login</button>
                            </EditForm>


                            <hr class="my-4">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>



}



@code {
    public UserLoginModel Model { get; set; }
    public string MyToken = "";

    HttpClient client = new HttpClient();

    protected override void OnInitialized()
    {
        Model = new UserLoginModel();

    }

    public async void LoginAccount()
    {



        var request = new HttpRequestMessage();
        request.RequestUri = new Uri("http://localhost:19383/api/Authenticate/login");
        request.Method = HttpMethod.Post;

        request.Headers.Add("Accept", "*/*");

        var bodyString = JsonConvert.SerializeObject(Model);

        var content = new StringContent(bodyString, System.Text.Encoding.UTF8, "application/json");
        request.Content = content;

        var response = await client.SendAsync(request);
        if (response.Headers.Contains("token"))
        {
            var result = response.Headers.GetValues("token").First();
            MyToken = JsonConvert.DeserializeObject<string>(result);

        }

        await Storage.SetAsync("token", MyToken);

        await response.Content.ReadAsStringAsync();
        await JsRuntime.InvokeVoidAsync("alert", "Success");
    }

}




@*<EditForm Model="@Model" OnValidSubmit="@LoginAccount">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="Email">Email</label>
        <InputText id="Email" @bind-Value="Model.Email" class="form-control" />
        <ValidationMessage For="() => Model.Email" />
    </div>
    <div class="mb-3">
        <label for="Password">Password</label>
        <InputText id="Password" @bind-Value="Model.Password" type="password" class="form-control" />
        <ValidationMessage For="() => Model.Password" />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>*@